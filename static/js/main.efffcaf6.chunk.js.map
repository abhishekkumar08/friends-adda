{"version":3,"sources":["component/card/card.jsx","component/card-list/card-list.jsx","component/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","friend","id","name","email","CardList","friends","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredFriends","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,G,YAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BAEL,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,aCNRC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,QAAQC,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,WCJbM,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACnB,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCgCjEG,E,kDAhCb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXb,QAAS,GACTU,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,QAASkB,S,+BAOlC,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,QAASU,EADV,EACUA,YAEXU,EAAkBpB,EAAQqB,QAAO,SAAA1B,GAAM,OAAIA,EAAOE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEhG,OACE,sBAAK9B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAWW,YAAY,eAAeC,aAAce,KAAKf,eACzD,cAAC,EAAD,CAAUJ,QAASoB,W,GA3BTI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.efffcaf6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"friend\"\r\n      src={`https://robohash.org/${props.friend.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2>{props.friend.name}</h2>\r\n    <p>{props.friend.email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card\";\r\nimport \"./card-list.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.friends.map((friend) => (\r\n        <Card key={friend.id} friend={friend}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport './search-box.css';\r\n\r\nexport const SearchBox=({placeholder, handleChange})=>(\r\n    <input type='search' className='search' placeholder={placeholder} onChange={handleChange} />\r\n)","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './component/card-list/card-list';\nimport { SearchBox } from './component/search-box/search-box';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      friends: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ friends: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { friends, searchField } = this.state;\n    // const filteredFriends = friends.filter(friend => friend.name.toLowerCase().includes(searchField.toLowerCase));\n    const filteredFriends = friends.filter(friend => friend.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Friends Adda</h1>\n        <SearchBox placeholder='Seach friend' handleChange={this.handleChange} />\n        <CardList friends={filteredFriends} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}